{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My PC\\\\Downloads\\\\SYSTEM-CLIENT-main\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handlePasswordUpdate = e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      Swal.fire({\n        title: \"Passwords don't match!\",\n        text: \"Please make sure both password fields match.\",\n        icon: \"error\"\n      });\n      return;\n    }\n\n    // Get the token from localStorage\n    const token = localStorage.getItem(\"token\");\n\n    // Make the API call to update the password\n    fetch(\"http://localhost:4000/users/update-password\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        newPassword: newPassword,\n        confirmPassword: confirmPassword\n      })\n    }).then(result => result.json()).then(data => {\n      if (data.code === \"PASSWORD-UPDATE-SUCCESS\") {\n        Swal.fire({\n          title: \"Password Updated\",\n          text: data.message,\n          icon: \"success\"\n        });\n      } else {\n        Swal.fire({\n          title: \"Error\",\n          text: data.message,\n          icon: \"error\"\n        });\n      }\n    }).catch(error => {\n      Swal.fire({\n        title: \"Error\",\n        text: \"Something went wrong. Please try again later.\",\n        icon: \"error\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handlePasswordUpdate,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"7t7qLBoBHt3jW+hLc45Mtb6UjMA=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Swal","jsxDEV","_jsxDEV","Profile","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handlePasswordUpdate","e","preventDefault","fire","title","text","icon","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","result","json","data","code","message","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","variant","_c","$RefreshReg$"],"sources":["C:/Users/My PC/Downloads/SYSTEM-CLIENT-main/SYSTEM-CLIENT-main/src/pages/Profile.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function Profile() {\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const handlePasswordUpdate = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            Swal.fire({\r\n                title: \"Passwords don't match!\",\r\n                text: \"Please make sure both password fields match.\",\r\n                icon: \"error\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Get the token from localStorage\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        // Make the API call to update the password\r\n        fetch(\"http://localhost:4000/users/update-password\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                newPassword: newPassword,\r\n                confirmPassword: confirmPassword\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n            if (data.code === \"PASSWORD-UPDATE-SUCCESS\") {\r\n                Swal.fire({\r\n                    title: \"Password Updated\",\r\n                    text: data.message,\r\n                    icon: \"success\"\r\n                });\r\n            } else {\r\n                Swal.fire({\r\n                    title: \"Error\",\r\n                    text: data.message,\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            Swal.fire({\r\n                title: \"Error\",\r\n                text: \"Something went wrong. Please try again later.\",\r\n                icon: \"error\"\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <h2>Update Password</h2>\r\n            <Form onSubmit={handlePasswordUpdate}>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Confirm New Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm new password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Update Password</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}