{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My PC\\\\Downloads\\\\SYSTEM-CLIENT-main\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileSettings = () => {\n  _s();\n  // State to store user information and password change fields\n  const [user, setUser] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch the user information from your backend\n    fetch('http://localhost:4000/users/profile', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n        // Add authorization headers if necessary (e.g., Authorization: `Bearer ${token}`)\n      }\n    }).then(response => response.json()).then(data => {\n      setUser(data);\n    }).catch(error => {\n      console.error(\"Error fetching user data:\", error);\n      setMessage('Error loading profile data');\n    });\n  }, []);\n  const handlePasswordUpdate = () => {\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match');\n      return;\n    }\n\n    // Make API request to update the password\n    fetch('/api/user/update-password', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n        // Add authorization headers if necessary\n      },\n      body: JSON.stringify({\n        newPassword\n      })\n    }).then(response => response.json()).then(data => {\n      setMessage('Password updated successfully');\n    }).catch(error => {\n      console.error(\"Error updating password:\", error);\n      setMessage('Error updating password');\n    });\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this); // Handle the case when user data is not yet loaded\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profile Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this), \" \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-update\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordUpdate,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileSettings, \"Z0f+51m9x0MjNh8vgABOQB9QcJE=\");\n_c = ProfileSettings;\nexport default ProfileSettings;\nvar _c;\n$RefreshReg$(_c, \"ProfileSettings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProfileSettings","_s","user","setUser","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","fetch","method","headers","then","response","json","data","catch","error","console","handlePasswordUpdate","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","username","email","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/My PC/Downloads/SYSTEM-CLIENT-main/SYSTEM-CLIENT-main/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileSettings = () => {\r\n  // State to store user information and password change fields\r\n  const [user, setUser] = useState(null);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch the user information from your backend\r\n    fetch('http://localhost:4000/users/profile', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add authorization headers if necessary (e.g., Authorization: `Bearer ${token}`)\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUser(data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching user data:\", error);\r\n        setMessage('Error loading profile data');\r\n      });\r\n  }, []);\r\n\r\n  const handlePasswordUpdate = () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // Make API request to update the password\r\n    fetch('/api/user/update-password', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Add authorization headers if necessary\r\n      },\r\n      body: JSON.stringify({ newPassword })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMessage('Password updated successfully');\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error updating password:\", error);\r\n        setMessage('Error updating password');\r\n      });\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Loading...</div>; // Handle the case when user data is not yet loaded\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-settings\">\r\n      <h2>Profile Settings</h2>\r\n      <div className=\"user-info\">\r\n        <p><strong>Username:</strong> {user.username}</p>\r\n        <p><strong>Email:</strong> {user.email}</p>\r\n      </div>\r\n\r\n      <div className=\"password-update\">\r\n        <h3>Change Password</h3>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={newPassword}\r\n          onChange={e => setNewPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n          value={confirmPassword}\r\n          onChange={e => setConfirmPassword(e.target.value)}\r\n        />\r\n        <button onClick={handlePasswordUpdate}>Update Password</button>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSettings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}